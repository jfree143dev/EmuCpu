#############################################################################
# Makefile for building: Cpu_test
# Generated by qmake (2.01a) (Qt 4.5.0) on: Thu Oct 1 23:05:10 2009
# Project:  Cpu_test.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile Cpu_test.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -I/usr/include/sigc++-2.0 -I/usr/lib/sigc++-2.0/include -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -g -I/usr/include/sigc++-2.0 -I/usr/lib/sigc++-2.0/include -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I.
LINK          = g++
LFLAGS        = 
LIBS          = $(SUBLIBS)  -L/usr/lib -lsigc-2.0 -lQtGui -lQtCore -lpthread
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = Cpu_test.cc \
		Cpu.cc \
		ExecutionUnit.cc \
		BusInterfaceUnit.cc \
		Loader.cc \
		Register.cc \
		Defines.cc \
		Memory.cc \
		MemoryAddress.cc \
		Utility.cc \
		FlagRegisterSignalsAndSlots.cc \
		MemorySignalsAndSlots.cc \
		GeneralRegisterSignalsAndSlots.cc \
		SegmentRegisterSignalsAndSlots.cc moc_Cpu.cpp \
		moc_FlagRegisterSignalsAndSlots.cpp \
		moc_MemorySignalsAndSlots.cpp \
		moc_GeneralRegisterSignalsAndSlots.cpp \
		moc_SegmentRegisterSignalsAndSlots.cpp
OBJECTS       = Cpu_test.o \
		Cpu.o \
		ExecutionUnit.o \
		BusInterfaceUnit.o \
		Loader.o \
		Register.o \
		Defines.o \
		Memory.o \
		MemoryAddress.o \
		Utility.o \
		FlagRegisterSignalsAndSlots.o \
		MemorySignalsAndSlots.o \
		GeneralRegisterSignalsAndSlots.o \
		SegmentRegisterSignalsAndSlots.o \
		moc_Cpu.o \
		moc_FlagRegisterSignalsAndSlots.o \
		moc_MemorySignalsAndSlots.o \
		moc_GeneralRegisterSignalsAndSlots.o \
		moc_SegmentRegisterSignalsAndSlots.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/link_pkgconfig.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		Cpu_test.pro
QMAKE_TARGET  = Cpu_test
DESTDIR       = 
TARGET        = Cpu_test

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: Cpu_test.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/link_pkgconfig.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -unix -o Makefile Cpu_test.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/link_pkgconfig.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile Cpu_test.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/Cpu_test1.0.0 || $(MKDIR) .tmp/Cpu_test1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/Cpu_test1.0.0/ && $(COPY_FILE) --parents Cpu.hh ExecutionUnit.hh BusInterfaceUnit.hh Loader.hh Register.hh Defines.hh Memory.hh MemoryAddress.hh Utility.hh FlagRegisterSignalsAndSlots.hh MemorySignalsAndSlots.hh GeneralRegisterSignalsAndSlots.hh SegmentRegisterSignalsAndSlots.hh .tmp/Cpu_test1.0.0/ && $(COPY_FILE) --parents Cpu_test.cc Cpu.cc ExecutionUnit.cc BusInterfaceUnit.cc Loader.cc Register.cc Defines.cc Memory.cc MemoryAddress.cc Utility.cc FlagRegisterSignalsAndSlots.cc MemorySignalsAndSlots.cc GeneralRegisterSignalsAndSlots.cc SegmentRegisterSignalsAndSlots.cc .tmp/Cpu_test1.0.0/ && (cd `dirname .tmp/Cpu_test1.0.0` && $(TAR) Cpu_test1.0.0.tar Cpu_test1.0.0 && $(COMPRESS) Cpu_test1.0.0.tar) && $(MOVE) `dirname .tmp/Cpu_test1.0.0`/Cpu_test1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/Cpu_test1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_Cpu.cpp moc_FlagRegisterSignalsAndSlots.cpp moc_MemorySignalsAndSlots.cpp moc_GeneralRegisterSignalsAndSlots.cpp moc_SegmentRegisterSignalsAndSlots.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_Cpu.cpp moc_FlagRegisterSignalsAndSlots.cpp moc_MemorySignalsAndSlots.cpp moc_GeneralRegisterSignalsAndSlots.cpp moc_SegmentRegisterSignalsAndSlots.cpp
moc_Cpu.cpp: ExecutionUnit.hh \
		BusInterfaceUnit.hh \
		Memory.hh \
		INumberReadableWritable.hh \
		Register.hh \
		MemoryAddress.hh \
		Defines.hh \
		Loader.hh \
		FlagRegisterSignalsAndSlots.hh \
		MemorySignalsAndSlots.hh \
		GeneralRegisterSignalsAndSlots.hh \
		SegmentRegisterSignalsAndSlots.hh \
		Cpu.hh
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) Cpu.hh -o moc_Cpu.cpp

moc_FlagRegisterSignalsAndSlots.cpp: FlagRegisterSignalsAndSlots.hh
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) FlagRegisterSignalsAndSlots.hh -o moc_FlagRegisterSignalsAndSlots.cpp

moc_MemorySignalsAndSlots.cpp: MemorySignalsAndSlots.hh
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) MemorySignalsAndSlots.hh -o moc_MemorySignalsAndSlots.cpp

moc_GeneralRegisterSignalsAndSlots.cpp: GeneralRegisterSignalsAndSlots.hh
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) GeneralRegisterSignalsAndSlots.hh -o moc_GeneralRegisterSignalsAndSlots.cpp

moc_SegmentRegisterSignalsAndSlots.cpp: SegmentRegisterSignalsAndSlots.hh
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) SegmentRegisterSignalsAndSlots.hh -o moc_SegmentRegisterSignalsAndSlots.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

Cpu_test.o: Cpu_test.cc Cpu.hh \
		ExecutionUnit.hh \
		BusInterfaceUnit.hh \
		Memory.hh \
		INumberReadableWritable.hh \
		Register.hh \
		MemoryAddress.hh \
		Defines.hh \
		Loader.hh \
		FlagRegisterSignalsAndSlots.hh \
		MemorySignalsAndSlots.hh \
		GeneralRegisterSignalsAndSlots.hh \
		SegmentRegisterSignalsAndSlots.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Cpu_test.o Cpu_test.cc

Cpu.o: Cpu.cc Cpu.hh \
		ExecutionUnit.hh \
		BusInterfaceUnit.hh \
		Memory.hh \
		INumberReadableWritable.hh \
		Register.hh \
		MemoryAddress.hh \
		Defines.hh \
		Loader.hh \
		FlagRegisterSignalsAndSlots.hh \
		MemorySignalsAndSlots.hh \
		GeneralRegisterSignalsAndSlots.hh \
		SegmentRegisterSignalsAndSlots.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Cpu.o Cpu.cc

ExecutionUnit.o: ExecutionUnit.cc ExecutionUnit.hh \
		BusInterfaceUnit.hh \
		Memory.hh \
		INumberReadableWritable.hh \
		Register.hh \
		MemoryAddress.hh \
		Defines.hh \
		Utility.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ExecutionUnit.o ExecutionUnit.cc

BusInterfaceUnit.o: BusInterfaceUnit.cc BusInterfaceUnit.hh \
		Memory.hh \
		INumberReadableWritable.hh \
		Register.hh \
		MemoryAddress.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o BusInterfaceUnit.o BusInterfaceUnit.cc

Loader.o: Loader.cc Loader.hh \
		Memory.hh \
		INumberReadableWritable.hh \
		ExecutionUnit.hh \
		BusInterfaceUnit.hh \
		Register.hh \
		MemoryAddress.hh \
		Defines.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Loader.o Loader.cc

Register.o: Register.cc Register.hh \
		INumberReadableWritable.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Register.o Register.cc

Defines.o: Defines.cc Defines.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Defines.o Defines.cc

Memory.o: Memory.cc Memory.hh \
		INumberReadableWritable.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Memory.o Memory.cc

MemoryAddress.o: MemoryAddress.cc MemoryAddress.hh \
		Memory.hh \
		INumberReadableWritable.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o MemoryAddress.o MemoryAddress.cc

Utility.o: Utility.cc Utility.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Utility.o Utility.cc

FlagRegisterSignalsAndSlots.o: FlagRegisterSignalsAndSlots.cc FlagRegisterSignalsAndSlots.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o FlagRegisterSignalsAndSlots.o FlagRegisterSignalsAndSlots.cc

MemorySignalsAndSlots.o: MemorySignalsAndSlots.cc MemorySignalsAndSlots.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o MemorySignalsAndSlots.o MemorySignalsAndSlots.cc

GeneralRegisterSignalsAndSlots.o: GeneralRegisterSignalsAndSlots.cc GeneralRegisterSignalsAndSlots.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o GeneralRegisterSignalsAndSlots.o GeneralRegisterSignalsAndSlots.cc

SegmentRegisterSignalsAndSlots.o: SegmentRegisterSignalsAndSlots.cc SegmentRegisterSignalsAndSlots.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o SegmentRegisterSignalsAndSlots.o SegmentRegisterSignalsAndSlots.cc

moc_Cpu.o: moc_Cpu.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_Cpu.o moc_Cpu.cpp

moc_FlagRegisterSignalsAndSlots.o: moc_FlagRegisterSignalsAndSlots.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_FlagRegisterSignalsAndSlots.o moc_FlagRegisterSignalsAndSlots.cpp

moc_MemorySignalsAndSlots.o: moc_MemorySignalsAndSlots.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_MemorySignalsAndSlots.o moc_MemorySignalsAndSlots.cpp

moc_GeneralRegisterSignalsAndSlots.o: moc_GeneralRegisterSignalsAndSlots.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_GeneralRegisterSignalsAndSlots.o moc_GeneralRegisterSignalsAndSlots.cpp

moc_SegmentRegisterSignalsAndSlots.o: moc_SegmentRegisterSignalsAndSlots.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_SegmentRegisterSignalsAndSlots.o moc_SegmentRegisterSignalsAndSlots.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

