#############################################################################
# Makefile for building: ../sim86
# Generated by qmake (2.01a) (Qt 4.5.0) on: Thu Oct 29 18:21:53 2009
# Project:  src.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile src.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -I/usr/include/sigc++-2.0 -I/usr/lib/sigc++-2.0/include -D_REENTRANT -Wall -W $(DEFINES)
CXXFLAGS      = -pipe -O2 -I/usr/include/sigc++-2.0 -I/usr/lib/sigc++-2.0/include -D_REENTRANT -Wall -W $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -lsigc-2.0 -lpthread -lQtGui -lQtCore
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = Sim86.cc \
		ProxyLayer.cc \
		Cpu.cc \
		CpuComponents.cc \
		NumberWrapper.cc \
		OperandList.cc \
		Instruction.cc \
		Defines.cc \
		ExecutionUnit.cc \
		ArithmeticLogicUnit.cc \
		BusInterfaceUnit.cc \
		Memory.cc \
		Loader.cc \
		InstructionTable.cc \
		InstructionDecoder.cc \
		InstructionDisassembly.cc \
		FlagRegisterSignalsAndSlots.cc \
		GeneralRegisterSignalsAndSlots.cc \
		SegmentRegisterSignalsAndSlots.cc \
		MemorySignalsAndSlots.cc \
		DisassemblySignalsAndSlots.cc \
		FlagsWidget.cc \
		GeneralRegistersWidget.cc \
		SegmentRegistersWidget.cc \
		StackWidget.cc \
		DisassemblyWidget.cc \
		MemoryWidget.cc \
		TerminalWidget.cc \
		Sim86Window.cc moc_ProxyLayer.cpp \
		moc_Cpu.cpp \
		moc_FlagRegisterSignalsAndSlots.cpp \
		moc_GeneralRegisterSignalsAndSlots.cpp \
		moc_SegmentRegisterSignalsAndSlots.cpp \
		moc_MemorySignalsAndSlots.cpp \
		moc_DisassemblySignalsAndSlots.cpp \
		moc_FlagsWidget.cpp \
		moc_GeneralRegistersWidget.cpp \
		moc_SegmentRegistersWidget.cpp \
		moc_StackWidget.cpp \
		moc_DisassemblyWidget.cpp \
		moc_MemoryWidget.cpp \
		moc_TerminalWidget.cpp \
		moc_Sim86Window.cpp
OBJECTS       = Sim86.o \
		ProxyLayer.o \
		Cpu.o \
		CpuComponents.o \
		NumberWrapper.o \
		OperandList.o \
		Instruction.o \
		Defines.o \
		ExecutionUnit.o \
		ArithmeticLogicUnit.o \
		BusInterfaceUnit.o \
		Memory.o \
		Loader.o \
		InstructionTable.o \
		InstructionDecoder.o \
		InstructionDisassembly.o \
		FlagRegisterSignalsAndSlots.o \
		GeneralRegisterSignalsAndSlots.o \
		SegmentRegisterSignalsAndSlots.o \
		MemorySignalsAndSlots.o \
		DisassemblySignalsAndSlots.o \
		FlagsWidget.o \
		GeneralRegistersWidget.o \
		SegmentRegistersWidget.o \
		StackWidget.o \
		DisassemblyWidget.o \
		MemoryWidget.o \
		TerminalWidget.o \
		Sim86Window.o \
		moc_ProxyLayer.o \
		moc_Cpu.o \
		moc_FlagRegisterSignalsAndSlots.o \
		moc_GeneralRegisterSignalsAndSlots.o \
		moc_SegmentRegisterSignalsAndSlots.o \
		moc_MemorySignalsAndSlots.o \
		moc_DisassemblySignalsAndSlots.o \
		moc_FlagsWidget.o \
		moc_GeneralRegistersWidget.o \
		moc_SegmentRegistersWidget.o \
		moc_StackWidget.o \
		moc_DisassemblyWidget.o \
		moc_MemoryWidget.o \
		moc_TerminalWidget.o \
		moc_Sim86Window.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/link_pkgconfig.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		src.pro
QMAKE_TARGET  = sim86
DESTDIR       = ../
TARGET        = ../sim86

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_FlagsWidget.h ui_GeneralRegistersWidget.h ui_SegmentRegistersWidget.h ui_StackWidget.h ui_DisassemblyWidget.h ui_MemoryWidget.h ui_TerminalWidget.h ui_Sim86Window.h $(OBJECTS)  
	@$(CHK_DIR_EXISTS) ../ || $(MKDIR) ../ 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: src.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/link_pkgconfig.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -unix -o Makefile src.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/link_pkgconfig.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile src.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/sim861.0.0 || $(MKDIR) .tmp/sim861.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/sim861.0.0/ && $(COPY_FILE) --parents ProxyLayer.hh Cpu.hh CpuComponents.hh NumberWrapper.hh OperandList.hh Instruction.hh Defines.hh ExecutionUnit.hh ArithmeticLogicUnit.hh BusInterfaceUnit.hh Memory.hh Loader.hh InstructionTable.hh InstructionDecoder.hh InstructionDisassembly.hh FlagRegisterSignalsAndSlots.hh GeneralRegisterSignalsAndSlots.hh SegmentRegisterSignalsAndSlots.hh MemorySignalsAndSlots.hh DisassemblySignalsAndSlots.hh FlagsWidget.hh GeneralRegistersWidget.hh SegmentRegistersWidget.hh StackWidget.hh DisassemblyWidget.hh MemoryWidget.hh TerminalWidget.hh Sim86Window.hh .tmp/sim861.0.0/ && $(COPY_FILE) --parents Sim86.cc ProxyLayer.cc Cpu.cc CpuComponents.cc NumberWrapper.cc OperandList.cc Instruction.cc Defines.cc ExecutionUnit.cc ArithmeticLogicUnit.cc BusInterfaceUnit.cc Memory.cc Loader.cc InstructionTable.cc InstructionDecoder.cc InstructionDisassembly.cc FlagRegisterSignalsAndSlots.cc GeneralRegisterSignalsAndSlots.cc SegmentRegisterSignalsAndSlots.cc MemorySignalsAndSlots.cc DisassemblySignalsAndSlots.cc FlagsWidget.cc GeneralRegistersWidget.cc SegmentRegistersWidget.cc StackWidget.cc DisassemblyWidget.cc MemoryWidget.cc TerminalWidget.cc Sim86Window.cc .tmp/sim861.0.0/ && $(COPY_FILE) --parents FlagsWidget.ui GeneralRegistersWidget.ui SegmentRegistersWidget.ui StackWidget.ui DisassemblyWidget.ui MemoryWidget.ui TerminalWidget.ui Sim86Window.ui .tmp/sim861.0.0/ && (cd `dirname .tmp/sim861.0.0` && $(TAR) sim861.0.0.tar sim861.0.0 && $(COMPRESS) sim861.0.0.tar) && $(MOVE) `dirname .tmp/sim861.0.0`/sim861.0.0.tar.gz . && $(DEL_FILE) -r .tmp/sim861.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_ProxyLayer.cpp moc_Cpu.cpp moc_FlagRegisterSignalsAndSlots.cpp moc_GeneralRegisterSignalsAndSlots.cpp moc_SegmentRegisterSignalsAndSlots.cpp moc_MemorySignalsAndSlots.cpp moc_DisassemblySignalsAndSlots.cpp moc_FlagsWidget.cpp moc_GeneralRegistersWidget.cpp moc_SegmentRegistersWidget.cpp moc_StackWidget.cpp moc_DisassemblyWidget.cpp moc_MemoryWidget.cpp moc_TerminalWidget.cpp moc_Sim86Window.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_ProxyLayer.cpp moc_Cpu.cpp moc_FlagRegisterSignalsAndSlots.cpp moc_GeneralRegisterSignalsAndSlots.cpp moc_SegmentRegisterSignalsAndSlots.cpp moc_MemorySignalsAndSlots.cpp moc_DisassemblySignalsAndSlots.cpp moc_FlagsWidget.cpp moc_GeneralRegistersWidget.cpp moc_SegmentRegistersWidget.cpp moc_StackWidget.cpp moc_DisassemblyWidget.cpp moc_MemoryWidget.cpp moc_TerminalWidget.cpp moc_Sim86Window.cpp
moc_ProxyLayer.cpp: Cpu.hh \
		CpuComponents.hh \
		ExecutionUnit.hh \
		Register.hh \
		INumberReadableWritable.hh \
		ArithmeticLogicUnit.hh \
		BusInterfaceUnit.hh \
		Memory.hh \
		MemoryAddress.hh \
		InstructionDecoder.hh \
		Loader.hh \
		Sim86Window.hh \
		ui_Sim86Window.h \
		FlagsWidget.hh \
		ui_FlagsWidget.h \
		GeneralRegistersWidget.hh \
		ui_GeneralRegistersWidget.h \
		SegmentRegistersWidget.hh \
		ui_SegmentRegistersWidget.h \
		StackWidget.hh \
		ui_StackWidget.h \
		DisassemblyWidget.hh \
		ui_DisassemblyWidget.h \
		MemoryWidget.hh \
		ui_MemoryWidget.h \
		TerminalWidget.hh \
		ui_TerminalWidget.h \
		FlagRegisterSignalsAndSlots.hh \
		MemorySignalsAndSlots.hh \
		GeneralRegisterSignalsAndSlots.hh \
		SegmentRegisterSignalsAndSlots.hh \
		DisassemblySignalsAndSlots.hh \
		ProxyLayer.hh
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) ProxyLayer.hh -o moc_ProxyLayer.cpp

moc_Cpu.cpp: CpuComponents.hh \
		ExecutionUnit.hh \
		Register.hh \
		INumberReadableWritable.hh \
		ArithmeticLogicUnit.hh \
		BusInterfaceUnit.hh \
		Memory.hh \
		MemoryAddress.hh \
		InstructionDecoder.hh \
		Loader.hh \
		Cpu.hh
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) Cpu.hh -o moc_Cpu.cpp

moc_FlagRegisterSignalsAndSlots.cpp: FlagRegisterSignalsAndSlots.hh
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) FlagRegisterSignalsAndSlots.hh -o moc_FlagRegisterSignalsAndSlots.cpp

moc_GeneralRegisterSignalsAndSlots.cpp: GeneralRegisterSignalsAndSlots.hh
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) GeneralRegisterSignalsAndSlots.hh -o moc_GeneralRegisterSignalsAndSlots.cpp

moc_SegmentRegisterSignalsAndSlots.cpp: SegmentRegisterSignalsAndSlots.hh
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) SegmentRegisterSignalsAndSlots.hh -o moc_SegmentRegisterSignalsAndSlots.cpp

moc_MemorySignalsAndSlots.cpp: MemorySignalsAndSlots.hh
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) MemorySignalsAndSlots.hh -o moc_MemorySignalsAndSlots.cpp

moc_DisassemblySignalsAndSlots.cpp: DisassemblySignalsAndSlots.hh
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) DisassemblySignalsAndSlots.hh -o moc_DisassemblySignalsAndSlots.cpp

moc_FlagsWidget.cpp: ui_FlagsWidget.h \
		FlagsWidget.hh
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) FlagsWidget.hh -o moc_FlagsWidget.cpp

moc_GeneralRegistersWidget.cpp: ui_GeneralRegistersWidget.h \
		GeneralRegistersWidget.hh
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) GeneralRegistersWidget.hh -o moc_GeneralRegistersWidget.cpp

moc_SegmentRegistersWidget.cpp: ui_SegmentRegistersWidget.h \
		SegmentRegistersWidget.hh
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) SegmentRegistersWidget.hh -o moc_SegmentRegistersWidget.cpp

moc_StackWidget.cpp: ui_StackWidget.h \
		StackWidget.hh
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) StackWidget.hh -o moc_StackWidget.cpp

moc_DisassemblyWidget.cpp: ui_DisassemblyWidget.h \
		DisassemblyWidget.hh
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) DisassemblyWidget.hh -o moc_DisassemblyWidget.cpp

moc_MemoryWidget.cpp: ui_MemoryWidget.h \
		MemoryWidget.hh
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) MemoryWidget.hh -o moc_MemoryWidget.cpp

moc_TerminalWidget.cpp: ui_TerminalWidget.h \
		TerminalWidget.hh
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) TerminalWidget.hh -o moc_TerminalWidget.cpp

moc_Sim86Window.cpp: ui_Sim86Window.h \
		FlagsWidget.hh \
		ui_FlagsWidget.h \
		GeneralRegistersWidget.hh \
		ui_GeneralRegistersWidget.h \
		SegmentRegistersWidget.hh \
		ui_SegmentRegistersWidget.h \
		StackWidget.hh \
		ui_StackWidget.h \
		DisassemblyWidget.hh \
		ui_DisassemblyWidget.h \
		MemoryWidget.hh \
		ui_MemoryWidget.h \
		TerminalWidget.hh \
		ui_TerminalWidget.h \
		Sim86Window.hh
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) Sim86Window.hh -o moc_Sim86Window.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_FlagsWidget.h ui_GeneralRegistersWidget.h ui_SegmentRegistersWidget.h ui_StackWidget.h ui_DisassemblyWidget.h ui_MemoryWidget.h ui_TerminalWidget.h ui_Sim86Window.h
compiler_uic_clean:
	-$(DEL_FILE) ui_FlagsWidget.h ui_GeneralRegistersWidget.h ui_SegmentRegistersWidget.h ui_StackWidget.h ui_DisassemblyWidget.h ui_MemoryWidget.h ui_TerminalWidget.h ui_Sim86Window.h
ui_FlagsWidget.h: FlagsWidget.ui
	/usr/bin/uic-qt4 FlagsWidget.ui -o ui_FlagsWidget.h

ui_GeneralRegistersWidget.h: GeneralRegistersWidget.ui
	/usr/bin/uic-qt4 GeneralRegistersWidget.ui -o ui_GeneralRegistersWidget.h

ui_SegmentRegistersWidget.h: SegmentRegistersWidget.ui
	/usr/bin/uic-qt4 SegmentRegistersWidget.ui -o ui_SegmentRegistersWidget.h

ui_StackWidget.h: StackWidget.ui
	/usr/bin/uic-qt4 StackWidget.ui -o ui_StackWidget.h

ui_DisassemblyWidget.h: DisassemblyWidget.ui
	/usr/bin/uic-qt4 DisassemblyWidget.ui -o ui_DisassemblyWidget.h

ui_MemoryWidget.h: MemoryWidget.ui
	/usr/bin/uic-qt4 MemoryWidget.ui -o ui_MemoryWidget.h

ui_TerminalWidget.h: TerminalWidget.ui
	/usr/bin/uic-qt4 TerminalWidget.ui -o ui_TerminalWidget.h

ui_Sim86Window.h: Sim86Window.ui
	/usr/bin/uic-qt4 Sim86Window.ui -o ui_Sim86Window.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

Sim86.o: Sim86.cc Cpu.hh \
		CpuComponents.hh \
		ExecutionUnit.hh \
		Register.hh \
		INumberReadableWritable.hh \
		ArithmeticLogicUnit.hh \
		BusInterfaceUnit.hh \
		Memory.hh \
		MemoryAddress.hh \
		InstructionDecoder.hh \
		Loader.hh \
		Sim86Window.hh \
		ui_Sim86Window.h \
		FlagsWidget.hh \
		ui_FlagsWidget.h \
		GeneralRegistersWidget.hh \
		ui_GeneralRegistersWidget.h \
		SegmentRegistersWidget.hh \
		ui_SegmentRegistersWidget.h \
		StackWidget.hh \
		ui_StackWidget.h \
		DisassemblyWidget.hh \
		ui_DisassemblyWidget.h \
		MemoryWidget.hh \
		ui_MemoryWidget.h \
		TerminalWidget.hh \
		ui_TerminalWidget.h \
		ProxyLayer.hh \
		FlagRegisterSignalsAndSlots.hh \
		MemorySignalsAndSlots.hh \
		GeneralRegisterSignalsAndSlots.hh \
		SegmentRegisterSignalsAndSlots.hh \
		DisassemblySignalsAndSlots.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Sim86.o Sim86.cc

ProxyLayer.o: ProxyLayer.cc ProxyLayer.hh \
		Cpu.hh \
		CpuComponents.hh \
		ExecutionUnit.hh \
		Register.hh \
		INumberReadableWritable.hh \
		ArithmeticLogicUnit.hh \
		BusInterfaceUnit.hh \
		Memory.hh \
		MemoryAddress.hh \
		InstructionDecoder.hh \
		Loader.hh \
		Sim86Window.hh \
		ui_Sim86Window.h \
		FlagsWidget.hh \
		ui_FlagsWidget.h \
		GeneralRegistersWidget.hh \
		ui_GeneralRegistersWidget.h \
		SegmentRegistersWidget.hh \
		ui_SegmentRegistersWidget.h \
		StackWidget.hh \
		ui_StackWidget.h \
		DisassemblyWidget.hh \
		ui_DisassemblyWidget.h \
		MemoryWidget.hh \
		ui_MemoryWidget.h \
		TerminalWidget.hh \
		ui_TerminalWidget.h \
		FlagRegisterSignalsAndSlots.hh \
		MemorySignalsAndSlots.hh \
		GeneralRegisterSignalsAndSlots.hh \
		SegmentRegisterSignalsAndSlots.hh \
		DisassemblySignalsAndSlots.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ProxyLayer.o ProxyLayer.cc

Cpu.o: Cpu.cc Cpu.hh \
		CpuComponents.hh \
		ExecutionUnit.hh \
		Register.hh \
		INumberReadableWritable.hh \
		ArithmeticLogicUnit.hh \
		BusInterfaceUnit.hh \
		Memory.hh \
		MemoryAddress.hh \
		InstructionDecoder.hh \
		Loader.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Cpu.o Cpu.cc

CpuComponents.o: CpuComponents.cc CpuComponents.hh \
		ExecutionUnit.hh \
		Register.hh \
		INumberReadableWritable.hh \
		ArithmeticLogicUnit.hh \
		BusInterfaceUnit.hh \
		Memory.hh \
		MemoryAddress.hh \
		InstructionDecoder.hh \
		Loader.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CpuComponents.o CpuComponents.cc

NumberWrapper.o: NumberWrapper.cc NumberWrapper.hh \
		INumberReadableWritable.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o NumberWrapper.o NumberWrapper.cc

OperandList.o: OperandList.cc OperandList.hh \
		NumberWrapper.hh \
		INumberReadableWritable.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o OperandList.o OperandList.cc

Instruction.o: Instruction.cc Instruction.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Instruction.o Instruction.cc

Defines.o: Defines.cc Defines.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Defines.o Defines.cc

ExecutionUnit.o: ExecutionUnit.cc ExecutionUnit.hh \
		Register.hh \
		INumberReadableWritable.hh \
		CpuComponents.hh \
		ArithmeticLogicUnit.hh \
		BusInterfaceUnit.hh \
		Memory.hh \
		MemoryAddress.hh \
		InstructionDecoder.hh \
		Loader.hh \
		Defines.hh \
		OperandList.hh \
		NumberWrapper.hh \
		Utility.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ExecutionUnit.o ExecutionUnit.cc

ArithmeticLogicUnit.o: ArithmeticLogicUnit.cc ArithmeticLogicUnit.hh \
		CpuComponents.hh \
		ExecutionUnit.hh \
		Register.hh \
		INumberReadableWritable.hh \
		BusInterfaceUnit.hh \
		Memory.hh \
		MemoryAddress.hh \
		InstructionDecoder.hh \
		Loader.hh \
		Utility.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ArithmeticLogicUnit.o ArithmeticLogicUnit.cc

BusInterfaceUnit.o: BusInterfaceUnit.cc BusInterfaceUnit.hh \
		Memory.hh \
		INumberReadableWritable.hh \
		Register.hh \
		MemoryAddress.hh \
		CpuComponents.hh \
		ExecutionUnit.hh \
		ArithmeticLogicUnit.hh \
		InstructionDecoder.hh \
		Loader.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o BusInterfaceUnit.o BusInterfaceUnit.cc

Memory.o: Memory.cc Memory.hh \
		INumberReadableWritable.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Memory.o Memory.cc

Loader.o: Loader.cc Loader.hh \
		CpuComponents.hh \
		ExecutionUnit.hh \
		Register.hh \
		INumberReadableWritable.hh \
		ArithmeticLogicUnit.hh \
		BusInterfaceUnit.hh \
		Memory.hh \
		MemoryAddress.hh \
		InstructionDecoder.hh \
		Defines.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Loader.o Loader.cc

InstructionTable.o: InstructionTable.cc InstructionTable.hh \
		ExecutionUnit.hh \
		Register.hh \
		INumberReadableWritable.hh \
		InstructionDecoder.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o InstructionTable.o InstructionTable.cc

InstructionDecoder.o: InstructionDecoder.cc InstructionDecoder.hh \
		CpuComponents.hh \
		ExecutionUnit.hh \
		Register.hh \
		INumberReadableWritable.hh \
		ArithmeticLogicUnit.hh \
		BusInterfaceUnit.hh \
		Memory.hh \
		MemoryAddress.hh \
		Loader.hh \
		Defines.hh \
		OperandList.hh \
		NumberWrapper.hh \
		InstructionDisassembly.hh \
		InstructionTable.hh \
		Immediate.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o InstructionDecoder.o InstructionDecoder.cc

InstructionDisassembly.o: InstructionDisassembly.cc InstructionDisassembly.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o InstructionDisassembly.o InstructionDisassembly.cc

FlagRegisterSignalsAndSlots.o: FlagRegisterSignalsAndSlots.cc FlagRegisterSignalsAndSlots.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o FlagRegisterSignalsAndSlots.o FlagRegisterSignalsAndSlots.cc

GeneralRegisterSignalsAndSlots.o: GeneralRegisterSignalsAndSlots.cc GeneralRegisterSignalsAndSlots.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o GeneralRegisterSignalsAndSlots.o GeneralRegisterSignalsAndSlots.cc

SegmentRegisterSignalsAndSlots.o: SegmentRegisterSignalsAndSlots.cc SegmentRegisterSignalsAndSlots.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o SegmentRegisterSignalsAndSlots.o SegmentRegisterSignalsAndSlots.cc

MemorySignalsAndSlots.o: MemorySignalsAndSlots.cc MemorySignalsAndSlots.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o MemorySignalsAndSlots.o MemorySignalsAndSlots.cc

DisassemblySignalsAndSlots.o: DisassemblySignalsAndSlots.cc DisassemblySignalsAndSlots.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o DisassemblySignalsAndSlots.o DisassemblySignalsAndSlots.cc

FlagsWidget.o: FlagsWidget.cc FlagsWidget.hh \
		ui_FlagsWidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o FlagsWidget.o FlagsWidget.cc

GeneralRegistersWidget.o: GeneralRegistersWidget.cc GeneralRegistersWidget.hh \
		ui_GeneralRegistersWidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o GeneralRegistersWidget.o GeneralRegistersWidget.cc

SegmentRegistersWidget.o: SegmentRegistersWidget.cc SegmentRegistersWidget.hh \
		ui_SegmentRegistersWidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o SegmentRegistersWidget.o SegmentRegistersWidget.cc

StackWidget.o: StackWidget.cc StackWidget.hh \
		ui_StackWidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o StackWidget.o StackWidget.cc

DisassemblyWidget.o: DisassemblyWidget.cc DisassemblyWidget.hh \
		ui_DisassemblyWidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o DisassemblyWidget.o DisassemblyWidget.cc

MemoryWidget.o: MemoryWidget.cc MemoryWidget.hh \
		ui_MemoryWidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o MemoryWidget.o MemoryWidget.cc

TerminalWidget.o: TerminalWidget.cc TerminalWidget.hh \
		ui_TerminalWidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o TerminalWidget.o TerminalWidget.cc

Sim86Window.o: Sim86Window.cc Sim86Window.hh \
		ui_Sim86Window.h \
		FlagsWidget.hh \
		ui_FlagsWidget.h \
		GeneralRegistersWidget.hh \
		ui_GeneralRegistersWidget.h \
		SegmentRegistersWidget.hh \
		ui_SegmentRegistersWidget.h \
		StackWidget.hh \
		ui_StackWidget.h \
		DisassemblyWidget.hh \
		ui_DisassemblyWidget.h \
		MemoryWidget.hh \
		ui_MemoryWidget.h \
		TerminalWidget.hh \
		ui_TerminalWidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Sim86Window.o Sim86Window.cc

moc_ProxyLayer.o: moc_ProxyLayer.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_ProxyLayer.o moc_ProxyLayer.cpp

moc_Cpu.o: moc_Cpu.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_Cpu.o moc_Cpu.cpp

moc_FlagRegisterSignalsAndSlots.o: moc_FlagRegisterSignalsAndSlots.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_FlagRegisterSignalsAndSlots.o moc_FlagRegisterSignalsAndSlots.cpp

moc_GeneralRegisterSignalsAndSlots.o: moc_GeneralRegisterSignalsAndSlots.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_GeneralRegisterSignalsAndSlots.o moc_GeneralRegisterSignalsAndSlots.cpp

moc_SegmentRegisterSignalsAndSlots.o: moc_SegmentRegisterSignalsAndSlots.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_SegmentRegisterSignalsAndSlots.o moc_SegmentRegisterSignalsAndSlots.cpp

moc_MemorySignalsAndSlots.o: moc_MemorySignalsAndSlots.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_MemorySignalsAndSlots.o moc_MemorySignalsAndSlots.cpp

moc_DisassemblySignalsAndSlots.o: moc_DisassemblySignalsAndSlots.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_DisassemblySignalsAndSlots.o moc_DisassemblySignalsAndSlots.cpp

moc_FlagsWidget.o: moc_FlagsWidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_FlagsWidget.o moc_FlagsWidget.cpp

moc_GeneralRegistersWidget.o: moc_GeneralRegistersWidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_GeneralRegistersWidget.o moc_GeneralRegistersWidget.cpp

moc_SegmentRegistersWidget.o: moc_SegmentRegistersWidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_SegmentRegistersWidget.o moc_SegmentRegistersWidget.cpp

moc_StackWidget.o: moc_StackWidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_StackWidget.o moc_StackWidget.cpp

moc_DisassemblyWidget.o: moc_DisassemblyWidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_DisassemblyWidget.o moc_DisassemblyWidget.cpp

moc_MemoryWidget.o: moc_MemoryWidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_MemoryWidget.o moc_MemoryWidget.cpp

moc_TerminalWidget.o: moc_TerminalWidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_TerminalWidget.o moc_TerminalWidget.cpp

moc_Sim86Window.o: moc_Sim86Window.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_Sim86Window.o moc_Sim86Window.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

