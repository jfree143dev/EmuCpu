 * 2009-09-10 => 10 hrs
   - Worked on designing Qt 4 Interface with threading. Ran into issue with the thread that turned out to be my own stupidity...I was accidently overriding one of the virtual functions that QThread provides. I also added the data manipulation stuff.

 * 2009-09-11 => 5 hrs
   - Added more functionality to the interface.

 * 2009-09-12 => 4 hrs
   - Added the loader and checksum stuff with UI connections. The database wasn't up so I couldn't really work on that part at all (no ability to test my ideas).

 * 2009-09-20 => 10 hrs
   - Created the user interface, no database or loader connection yet in the main interface (though I have done the database in the phase 1)

 * 2009-09-28 - 2009-09-29 => 12 hrs
   - Worked on the database issue alot. Finally found (by reading the code) that the QTDS driver isn't complete and doesn't seem to support hardly anything.
   - I then used the pure C FreeTDS library with connected perfectly (as far as I can tell) to the database and executes stored procedures correctly.
   - I created a C++ wrapper class for everything I needed to do with the C FreeTDS library.

 * 2009-09-30 => 6 hrs
   - Worked on a seamless interface for three different types: Register<T>, MemoryAddress<T>, and Immediate<T>.
   - It supports reading and writing to the underlying types with no effort at all. Just use the overloaded assignment operators (=, +=, *=, -=, /=, %=, etc.)
   - Each type can also be made to support Signals and Slots if need be (Register<T> already uses libsigc++ which in the UI <=> CPU layer is translated to QT Signals and Slots.)

 * 2009-10-01 => 7 hrs
   - Worked on a Signal and Slot abstraction between the user interface and the Cpu object.

 * 2009-10-04 => 3 hrs
   - Still connecting the UI and the CPU (which is running in a separate thread).

 * 2009-10-05 - 2009-10-08 => 9 hrs
   - Got the threading to work correctly."
 * 2009-10-11 => 5 hrs
   - Added decoding and executing stubs.
   - Modified function pointers for decoding and executing.
   - Added possible pointer deletion to Value class.

