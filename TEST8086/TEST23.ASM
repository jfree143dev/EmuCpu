; SOURCE: test23.asm
; Random sentence generator
; by Michael Laird
; Date: 11/88
; This program randomly selects words and forms sentences from them.
;
; This program tests the following instructions:
;    push  reg
;    mov   reg,imm
;    mov   mem,reg
;    mov   reg,mem
;    mov   acc,imm
;    mov   reg,reg
;    mov   acc,mem
;    mov   mem,acc
;    sub   reg,reg
;    div   reg
;    add   acc,imm
;    add   reg,reg
;    inc   reg
;    dec   reg
;    dec   mem
;    cmp   acc,imm
;    jnz   disp
;    out   2,al
;    loop  disp
;    pop   reg
;    ret
;    hlt
;    mul   reg
;    call  disp
;    jmp   disp
;    lea   reg,mem
;    int   type

setreg ip=begin
setreg sp=5fff
       org 1000
length    EQU %10
CR        EQU %13
LF        EQU %10
modulous  EQU %70

temp:  db "      "
multiplier:  dw 1234
seed:        dw 10

verbs:       db "talks $   goes $    runs $    hits $    chokes $  smells $  whacks $  "
             db "sees $    feels $   types $   reads $   writes $  drips $   screams $ "
             db "yells $   touches $ hears $   drives $  listens $ sneezes $ coughs $  "
             db "throws $  computes $destroys $produces $jumps $   asks $    seeks $   "
             db "eats $    cleans $  wipes $   dusts $   vacuums $ shoots $  burns $   "
             db "talks $   goes $    runs $    hits $    chokes $  smells $  whacks $  "
             db "sees $    feels $   types $   reads $   writes $  drips $   screams $ "
             db "yells $   touches $ hears $   drives $  listens $ sneezes $ coughs $  "
             db "throws $  computes $destroys $produces $jumps $   asks $    seeks $   "
             db "eats $    cleans $  wipes $   dusts $   vacuums $ shoots $  burns $   "
subjects:    db "Joe $     Dan $     He $      She $     It $      Marvin $  Helga $   "
             db "Mickey $  IBM $     Fido $    Goofy $   Don $     Bryan $   Omega $   "
             db "Suzanne $ Adam $    Paul $    Tandy $   Digital $ Mr. BoJo $The dump $"
             db "Grandma $ Grandpa $ Bill $    Steve $   Phil $    Dr. Bob $ The dog $ "
             db "The fish $The book $The cat $ The boy $ The girl $The hobo $The bum $ "
             db "Joe $     Dan $     He $      She $     It $      Marvin $  Helga $   "
             db "Mickey $  IBM $     Fido $    Goofy $   Don $     Bryan $   Omega $   "
             db "Suzanne $ Adam $    Paul $    Tandy $   Digital $ Mr. BoJo $The dump $"
             db "Grandma $ Grandpa $ Bill $    Steve $   Phil $    Dr. Bob $ The dog $ "
             db "The fish $The book $The cat $ The boy $ The girl $The hobo $The bum $ "
objects:     db "him$      food$     crazy$    weird$    blue$     salty$    flimsy$   "
             db "oddly$    nice$     lovely$   terrible$ awful$    yucky$    sweet$    "
             db "strangely$annoying$ a girl$   a nut$    strange$  money$    a book$   "
             db "software$ systems$  wildly$   weirdly$  dough$    shoes$    cold$     "
             db "mightily$ ugly$     beautiful$average$  a program$a thug$   the door$ "
             db "him$      food$     crazy$    weird$    blue$     salty$    flimsy$   "
             db "oddly$    nice$     lovely$   terrible$ awful$    yucky$    sweet$    "
             db "strangely$annoying$ a girl$   a nut$    strange$  money$    a book$   "
             db "software$ systems$  wildly$   weirdly$  dough$    shoes$    cold$     "
             db "mightily$ ugly$     beautiful$average$  a program$a thug$   the door$ "
end:         db ".",CR,LF,"$"
msg1:        db "Random sentence generator",CR,LF,"$"
msg2:        db "    by Michael Laird",CR,LF,"$"
msg3:        db "{the author hereby disclaims",CR,LF
             db " any responsibility for the",CR,LF
             db " sentences generated by this",CR,LF
             db " program.}",CR,LF,"$"
extra:       db "Simulation drove him NUTS!!!",CR,LF,"$"
delay:       dw 0

random:   push  bx
          push  cx
          push  dx
          mov   bx,modulous
          mov   cx,multiplier
          mov   ax,seed
          mul   cx
          div   bx
          mov   ax,dx
          inc   dx
          mov   seed,dx
          inc   cx
          mov   multiplier,cx
          pop   dx
          pop   cx
          pop   bx
          ret

begin:    lea   dx,msg1
          int   10
          lea   dx,msg2
          int   10
          lea   dx,msg3
          int   10
          call  random
          add   ax,1
          mov   delay,ax
loop:     call  random
          mov   dx,length
          mul   dx
          lea   dx,subjects
          add   dx,ax
          int   10
          call  random
          mov   dx,length
          mul   dx
          lea   dx,verbs
          add   dx,ax
          int   10
          call  random
          mov   dx,length
          mul   dx
          lea   dx,objects
          add   dx,ax
          int   10
          lea   dx,end
          int   10
          dec   word ptr delay
          jnz   loop
          lea   dx,extra
          int   10
          call  random
          add   ax,1
          mov   delay,ax
          jmp   loop
          hlt