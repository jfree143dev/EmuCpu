; SOURCE: test17.asm
; AUTHOR: Frank Walsh
;
; converts hex input to binary
; NOTE: will not assemble with my version of ASM (it hangs!!)

	SETREG IP = BEGIN
	SETREG SP = 5FFF
        ORG 100
	CR EQU %13       ; CARRIAGE RETURN
	LF EQU %10       ; LINE FEED
        ORG 100
	PROMPT:		DB "ENTER HEX DIGIT: $"
	WRONG1:		DB CR,LF,"TRY AGAIN: $"
	WRONG2:		DB CR,LF,"INVALID."
	NEWLINE:	DB CR,LF,"$"
	BINARY:		DB CR,LF,"BINARY VALUE = $"

BEGIN:	LEA	DX,PROMPT
	INT	10
        IN	AL,01
	MOV	AH,AL
	CALL	HEXDIGIT
        CMP	AL,FF
	JNE	GOOD
	LEA	DX,WRONG1
	INT	10
	IN	AL,01
	MOV	AH,AL
	CALL	HEXDIGIT
	CMP	AL,FF
	JNE	GOOD
	LEA	DX,WRONG2
	INT	10
	JMP	QUIT
GOOD:	LEA	DX,BINARY
	INT	10
	CALL	DSPBIN
QUIT:	HLT

DSPBIN: PUSH	AX
	CMP	AL,07
	JG	3BITON
	CALL	PRN0
	JMP	BIT2
3BITON:	SUB	AL,08
	CALL	PRN1
BIT2:	CMP	AL,3
	JG	2BITON
	CALL	PRN0
	JMP	BIT1
2BITON:	SUB	AL,04
	CALL	PRN1
BIT1:	CMP	AL,1
	JG	1BITON
	CALL	PRN0
	JMP	BIT0
1BITON:	SUB	AL,02
	CALL	PRN1
BIT0:	CMP	AL,0
	JG	0BITON
	CALL	PRN0
	JMP	BINEND
0BITON:	CALL	PRN1
BINEND:	POP	AX
	RET

PRN0:	PUSH	AX
	MOV	AL,'0'
	OUT	02,AL
	POP	AX
	RET

PRN1:	PUSH	AX
	MOV	AL,'1'
	OUT	02,AL
	POP	AX
	RET


HEXDIGIT:	PUSH	DX
		PUSH	CX
		PUSH	BX
		PUSH	AX
		CMP	AL,'a'
		JL	CAPS
		SUB	AL,20
CAPS:		SUB	AL,'0'
		JS	NOTHEX
		CMP	AL,0A
		JL	ISHEX
		SUB	AL,07
		CMP	AL,09
		JLE	NOTHEX
		CMP	AL,F
		JG	NOTHEX
		JMP	ISHEX
NOTHEX:		MOV	AL,FF
ISHEX:		MOV	DL,AL
		POP	AX
		MOV	AL,DL
		POP	BX
		POP	CX
		POP	DX
		RET